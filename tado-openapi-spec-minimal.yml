openapi: 3.0.0
info:
  title: tado API v2
  description: |
    Community managed API specification for the tado smart thermostat solution
  version: 2.2024.12.09.0
servers:
  - url: https://my.tado.com/api/v2/
    description: Production server
security:
  - oauth2: [] # no scopes

paths:
  /homes/{homeId}/weather:
    get:
      summary: Get the current weather for the given home
      description: Get the current weather for the given home
      operationId: getWeather
      tags:
        - home
      parameters:
        - in: path
          name: homeId
          schema:
            $ref: '#/components/schemas/HomeId'
          required: true
          description: unique ID of a home
      responses:
        '200':
          description: successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Weather'
        '401':
          $ref: '#/components/responses/Unauthorized401'
        '403':
          $ref: '#/components/responses/AccessDenied403'

  /homes/{homeId}/zones:
    get:
      summary: Get all zones (a.k.a. rooms) associated with the provided homeId.
      description: >
        Delivers information about each zone in the given home, including the tado devices present in each zone.
        
        
        About the devices: there are multiple ways to list the tado devices in a home or zone:

        * GET /homes/{homeId}/devices 

        * GET /homes/{homeId}/deviceList

        * GET /homes/{homeId}/zones **this operation**
        
        * GET /homes/{homeId}/zones/{zoneId}/control
        
        
        Distinguishing features of **this operation**:

        * **DeviceType 'IB01'**: devices of DeviceType 'IB01' (Internet Bridge) are not included in the response

        * **duties**: the response does tell you the duties of each device

        * **zone**: the response tells you the zone each device belongs to
        
        
        Used in app feature: Home page
      operationId: getZones # hint for client code generators
      tags:
        - zone
      parameters:
        - in: path
          name: homeId
          schema:
            $ref: '#/components/schemas/HomeId'
          required: true
          description: unique ID of a home
      responses:
        '200':
          description: successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Zone'
        '401':
          $ref: '#/components/responses/Unauthorized401'
        '403':
          $ref: '#/components/responses/AccessDenied403'

  /homes/{homeId}/zones/{zoneId}/state:
    get:
      summary: Get the current state details of a zone (a.k.a. room).
      description: >
        This includes current temperature, humidity and heating power information.
        
        Used in app feature: Home page > a room tile
      operationId: getZoneState # hint for client code generators
      tags:
        - zone
      parameters:
        - in: path
          name: homeId
          schema:
            $ref: '#/components/schemas/HomeId'
          required: true
          description: unique ID of a home
        - in: path
          name: zoneId
          schema:
            $ref: '#/components/schemas/ZoneId'
          required: true
          description: ID of a zone (unique within a home)
      responses:
        '200':
          description: successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneState'
        '401':
          $ref: '#/components/responses/Unauthorized401'
        '403':
          $ref: '#/components/responses/AccessDenied403'
        '404':
          $ref: '#/components/responses/NotFound404'

  /homes/{homeId}/zoneStates:
    get:
      summary: Get zone state details of every zone (a.k.a. room) in the specified home
      # double empty lines are intentional
      description: >
        This includes current temperature, humidity and heating power information.
        
        
        Used in app feature: Home page
      operationId: getZoneStates # hint for client code generators
      tags:
        - zone
      parameters:
        - in: path
          name: homeId
          schema:
            $ref: '#/components/schemas/HomeId'
          required: true
          description: unique ID of a home
      responses:
        '200':
          description: successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneStates'
        '401':
          $ref: '#/components/responses/Unauthorized401'
        '403':
          $ref: '#/components/responses/AccessDenied403'
        '404':
          $ref: '#/components/responses/NotFound404'

  /homes/{homeId}/zones/{zoneId}/overlay:
    put:
      summary: Set the overlay (manual override of the configured temperature schedule) for the given zone (a.k.a. room)
      description: Set the overlay (manual override of the configured temperature schedule) for the given zone (a.k.a. room)
      operationId: setZoneOverlay # hint for client code generators
      tags:
        - zone control
      parameters:
        - in: path
          name: homeId
          schema:
            $ref: '#/components/schemas/HomeId'
          required: true
          description: unique ID of a home
        - in: path
          name: zoneId
          schema:
            $ref: '#/components/schemas/ZoneId'
          required: true
          description: ID of a zone (unique within a home)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneOverlay'
            examples:
              MANUAL-OFF:
                value:
                  setting:
                    type: HEATING
                    power: OFF
                  termination:
                    typeSkillBasedApp: MANUAL
              MANUAL-ON:
                value:
                  setting:
                    type: HEATING
                    power: ON
                    temperature:
                      celsius: 19.5
                  termination:
                    typeSkillBasedApp: MANUAL
              TADO_MODE-ON:
                value:
                  setting:
                    type: HEATING
                    power: ON
                    temperature:
                      celsius: 19.5
                  termination:
                    typeSkillBasedApp: TADO_MODE
              NEXT_TIME_BLOCK-ON:
                value:
                  setting:
                    type: HEATING
                    power: ON
                    temperature:
                      celsius: 19.5
                  termination:
                    typeSkillBasedApp: NEXT_TIME_BLOCK
              TIMER-ON:
                value:
                  setting:
                    type: HEATING
                    power: ON
                    temperature:
                      celsius: 19.5
                  termination:
                    typeSkillBasedApp: TIMER
                    durationInSeconds: 3600
      responses:
        '200':
          description: successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneOverlay'
        '401':
          $ref: '#/components/responses/Unauthorized401'
        '403':
          $ref: '#/components/responses/AccessDenied403'
        '422':
          $ref: '#/components/responses/InputError422'
    delete:
      description: Remove the overlay (manual override of the configured temperature schedule) for the given zone (a.k.a. room)
      summary: Remove the overlay (manual override of the configured temperature schedule) for the given zone (a.k.a. room)
      operationId: deleteZoneOverlay # hint for client code generators
      tags:
        - zone control
      parameters:
        - in: path
          name: homeId
          schema:
            $ref: '#/components/schemas/HomeId'
          required: true
          description: unique ID of a home
        - in: path
          name: zoneId
          schema:
            $ref: '#/components/schemas/ZoneId'
          required: true
          description: ID of a zone (unique within a home)
      responses:
        '204':
          description: successful empty response
        '401':
          $ref: '#/components/responses/Unauthorized401'
        '403':
          $ref: '#/components/responses/AccessDenied403'

  /homes/{homeId}/deviceList:
    get:
      summary: Get all tado devices associated with the provided homeId, together with the zone (a.k.a. room) they are in.
      description: >
        There are multiple ways to list the tado devices in a home or zone:
        
        * GET /homes/{homeId}/devices 
        
        * GET /homes/{homeId}/deviceList **this operation**
        
        * GET /homes/{homeId}/zones
        
        * GET /homes/{homeId}/zones/{zoneId}/control
        
        
        Distinguishing features of **this operation**:
        
        * **DeviceType 'IB01'**: device of DeviceType 'IB01' (Internet Bridge) is included in the response
        
        * **duties**: the response only tells you if the device has a UI duty, no other duties (like driver or leader) are mentioned
        
        * **zone**: the response tells you the zone each device belongs to

      operationId: getDeviceList # hint for client code generators
      tags:
        - device
      parameters:
        - in: path
          name: homeId
          schema:
            $ref: '#/components/schemas/HomeId'
          required: true
          description: unique ID of a home
      responses:
        '200':
          description: successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceList'
        '401':
          $ref: '#/components/responses/Unauthorized401'
        '403':
          $ref: '#/components/responses/AccessDenied403'

components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        password:
          tokenUrl: https://auth.tado.com/oauth/token
          scopes: {}

  responses:
    Unauthorized401:
      description: unauthorized, invalid access token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    AccessDenied403:
      description: access denied, the authenticated user does not have access to the specified resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound404:
      description: not found, the specified resource does not exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    InputError422:
      description: >
        The request body is invalid or the requested operation is not supported.
        This can have all kinds of reasons, some examples:
        
        * a required property is missing
        
        * an invalid value is used for a property
        
        * a particular operation is not allowed on a resource given the state of the resource
        
        * a particular zone specific operation is not supported for the zone's ZoneTYpe
        
        * a particular operation requires a paid Auto-Assist subscription which is not active for the home
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse422'

  schemas:
    AirConditioningMode:
      type: string
      enum: [AUTO, COOL, HEAT, DRY, FAN]
      example: COOL

    BatteryState:
      type: string
      enum: [LOW, NORMAL]
      example: NORMAL
      description: device property known to be present for DeviceType SU02, VA02

    BooleanTimeSeries:
      type: object
      description: >
        Element of DayReport and ZoneState. 
        Used to express measuredData.measuringDeviceConnected (ZoneState), hotWaterProduction (ZoneState) 
        and weather.sunny (DayReport)
      properties:
        timeSeriesType:
          type: string
          example: dataIntervals
        valueType:
          type: string
          example: boolean
        dataIntervals:
          type: array
          items:
            $ref: '#/components/schemas/BooleanDataInterval'

    DefaultZoneOverlay:
      type: object
      description: >
        Used in /homes/{homeId}/zones/{zoneId}/defaultOverlay.

        It defines the default zone overlay termination type which tado will use when a user set zone settings (like temperature)
        via a physical tado device like a Smart Thermostat.
        (this results in setting a ZoneOverlay).

        The `type` defined here is used as the value for ZoneOverlay.termination.typeSkillBasedApp when setting a ZoneOverlay.
      properties:
        terminationCondition:
          type: object
          properties:
            type:
              $ref: '#/components/schemas/ZoneOverlayTerminationType'
            durationInSeconds:
              type: integer
              example: 600
              description: only applicable when type is TIMER

    Device:
      type: object
      description: >
        A piece of tado hardware
        
        
        Some of the properties are only available for certain device types. 
        Certain values for some properties are only applicable to certain device types. 
        Wherever device type specific information is known, it is documented. 
        But you cannot count on this information being fully complete.
      properties:
        deviceType:
          $ref: '#/components/schemas/DeviceType'
        serialNo:
          $ref: '#/components/schemas/DeviceId'
        shortSerialNo:
          type: string
          example: SU4126044345
        currentFwVersion:
          type: string
          example: 215.1
        connectionState:
          type: object
          description: "property known to be present for DeviceType SU02, VA02, BR02"
          properties:
            value:
              type: boolean
              example: true
            timestamp:
              type: string
              format: date-time
              example: "2022-11-25T09:40:14.803Z"
        characteristics:
          type: object
          properties:
            capabilities:
              type: array
              description: array known to be empty for DeviceType BR02
              items:
                type: string
                example: INSIDE_TEMPERATURE_MEASUREMENT
                description: >
                  known values: 
                  
                  * INSIDE_TEMPERATURE_MEASUREMENT (seen for DeviceType SU02, VA02)
                  
                  * IDENTIFY (seen for DeviceType SU02, VA02)
                  
                  * RADIO_ENCRYPTION_KEY_ACCESS (seen for DeviceType IB01)
        mountingState:
          type: object
          description: property known to be present for DeviceType VA02
          properties:
            value:
              type: string
              example: CALIBRATED
              description: >
                known values: 
                
                * CALIBRATED
            timestamp:
              type: string
              format: date-time
              example: "2022-11-25T09:40:14.803Z"
        mountingStateWithError:
          type: string
          example: CALIBRATED
          description: "property known to be present for DeviceType VA02; known values: CALIBRATED"
        batteryState:
          $ref: '#/components/schemas/BatteryState'
        orientation:
          $ref: '#/components/schemas/Orientation'
        childLockEnabled:
          type: boolean
          example: false
          description: "property known to be present for DeviceType VA02"
        isDriverConfigured:
          type: boolean
          example: true
          description: "property known to be present for DeviceType BR02"
        inPairingMode:
          type: boolean
          example: false
          description: "property known to be present for DeviceType IB01"

    DeviceExtra:
      description: >
        A piece of tado hardware.
        
        
        Some of the properties are only available for certain device types. 
        Certain values for some properties are only applicable for certain device types. 
        Wherever device type specific information is known, it is documented.
      allOf:
        - $ref: '#/components/schemas/Device'
        - properties:
            duties:
              type: array
              items:
                type: string
                example: ZONE_UI
                description: >
                  known values: 
                  
                  * ZONE_UI (seen for DeviceType SU02, VA02)
                  
                  * ZONE_LEADER (seen for DeviceType SU02, VA02)
                  
                  * ZONE_DRIVER (seen for DeviceType VA02)

    DeviceId:
      type: string
      example: SU4126044356
      description: the serialNo of a tado device

    DeviceList:
      type: object
      description: result of /homes/{homeId}/zones/{zoneId}/deviceList
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/DeviceListItem'

    DeviceListItem:
      type: object
      description: Element of DeviceList
      properties:
        type:
          $ref: '#/components/schemas/DeviceType'
        device:
          $ref: '#/components/schemas/Device'
        zone:
          type: object
          description: This property is not present for devices of type 'IB01' (Internet Bridge) and 'BR02' (Wireless Receiver).
          properties:
            discriminator:
              $ref: '#/components/schemas/ZoneId'
            duties:
              type: array
              description: This property has only been seen for devices of type 'SU02'
              items:
                type: string
                example: UI
                description: >
                  known values: 
                  
                  * UI (seen for DeviceType SU02)"

    DeviceType:
      type: string
      example: SU02
      description: >
        data element of Device
        
        
        known values: 
        
        * BR02 (Wireless Receiver)
        
        * BU01 (Boiler controller?)
        
        * GW02 (Internet Gateway?)
        
        * IB01 (Internet Bridge)
        
        * RU01 (Remote Thermostat)
        
        * RU02 (Wired Smart Thermostat V3+)
        
        * SU02 (Wireless Smart Thermostat V3+)
        
        * VA01
        
        * VA02 (Smart Radiator Thermostat V3+)

    Error:
      type: object
      properties:
        code:
          type: string
          description: meaningful textual code associated with the HTTP status code like 'accessDenied' (for 403) or 'unauthorized' for (401)
        title:
          type: string
          description: detailed description of the error in natural language (english)

    Error422:
      description: >
        The zoneType is only available for certain 422 errors, 
        to indicate that a certain zone specific operation is not allowed because of the ZoneType of the zone.
      type: object
      allOf:
        - $ref: '#/components/schemas/Error'
        - properties:
            zoneType:
              $ref: '#/components/schemas/ZoneType'

    ErrorResponse:
      type: object
      description: error object returned for non-200 responses
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'

    ErrorResponse422:
      type: object
      description: error object returned for 422 responses
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error422'

    HomeId:
      type: integer
      format: int64
      example: 1118186
      description: unique home ID

    HomePresence:
      type: string
      enum: [HOME, AWAY]
      example: HOME

    Orientation:
      type: string
      enum: [HORIZONTAL, VERTICAL]
      example: HORIZONTAL
      description: tado device property known to be present for DeviceType VA02

    PercentageDataPoint:
      type: object
      description: Used in Weather and ZoneState, to express quantities like heating power, humidity and solar intensity.
      properties:
        type:
          type: string
          example: PERCENTAGE
        percentage:
          type: number
          format: float
          example: 51.0
        timestamp:
          type: string
          format: date-time
          example: "2024-07-30T21:51:41.178Z"

    Power:
      type: string
      # quotes are necessary;
      # without it ON and OFF are interpreted as boolean values by the yaml-to-json converter used by openapi-generator
      enum: [ 'ON', 'OFF' ]
      example: ON
      description: used in ZoneSetting

    Temperature:
      type: object
      properties:
        celsius:
          type: number
          format: float
          example: 13.9
        fahrenheit:
          type: number
          format: float
          example: 57.02

    TemperatureCapability:
      type: object
      description: property available for zone type HEATING
      properties:
        celsius:
          type: object
          properties:
            min:
              type: integer
              example: 5
            max:
              type: integer
              example: 25
            step:
              type: number
              format: float
              example: 0.1
        fahrenheit:
          type: object
          properties:
            min:
              type: integer
              example: 41
            max:
              type: integer
              example: 77
            step:
              type: number
              format: float
              example: 0.1

    TemperatureDataPoint:
      type: object
      description: Used in Weather and ZoneState, used to express outside or inside temperature.
      allOf:
        - $ref: '#/components/schemas/Temperature'
        - properties:
            timestamp:
              type: string
              format: date-time
              example: "2024-08-04T09:20:08.370Z"
            type:
              type: string
              example: TEMPERATURE
            precision:
              $ref: '#/components/schemas/TemperaturePrecision'

    TemperaturePrecision:
      type: object
      properties:
        celsius:
          type: number
          format: float
          example: 0.1
        fahrenheit:
          type: number
          format: float
          example: 0.1

    Weather:
      type: object
      description: Result of /homes/{homeId}/weather
      properties:
        solarIntensity:
          $ref: '#/components/schemas/PercentageDataPoint'
        outsideTemperature:
          $ref: '#/components/schemas/TemperatureDataPoint'
        weatherState:
          $ref: '#/components/schemas/WeatherStateDataPoint'

    WeatherState:
      type: string
      enum: [SUN, FOGGY, CLOUDY, CLOUDY_PARTLY, CLOUDY_MOSTLY, RAIN, SCATTERED_RAIN, SNOW, NIGHT_CLEAR, NIGHT_CLOUDY]
      example: CLOUDY_PARTLY
      description: Used in DayReport and Weather

    WeatherStateDataPoint:
      type: object
      description: Used in Weather
      properties:
        type:
          type: string
          example: WEATHER_STATE
        value:
          $ref: '#/components/schemas/WeatherState'
        timestamp:
          type: string
          format: date-time
          example: "2024-08-04T09:20:08.370Z"

    Zone:
      type: object
      description: a room in a home whose temperature is controlled by tado
      properties:
        id:
          $ref: '#/components/schemas/ZoneId'
        name:
          type: string
          description: user assigned name
          example: my living room
        type:
          $ref: '#/components/schemas/ZoneType'
        dateCreated:
          type: string
          format: date-time
          example: "2022-11-25T09:40:14.803Z"
        deviceTypes:
          type: array
          items:
            $ref: '#/components/schemas/DeviceType'
        devices:
          type: array
          items:
            $ref: '#/components/schemas/DeviceExtra'
        reportAvailable:
          type: boolean
          example: false
        showScheduleSetup:
          type: boolean
          example: true
        supportsDazzle:
          type: boolean
          example: true
        dazzleEnabled:
          type: boolean
          example: true
        dazzleMode:
          type: object
          properties:
            supported:
              type: boolean
              example: true
            enabled:
              type: boolean
              example: true
        openWindowDetection:
          type: object
          properties:
            supported:
              type: boolean
              example: true
            enabled:
              type: boolean
              example: true
            timeoutInSeconds:
              type: integer
              example: 900

    ZoneId:
      type: integer
      example: 3
      description: ID of a zone (unique only within the home it belongs to)

    ZoneOpenWindow:
      type: object
      description: >
        Open Window is set when Tado detects an open window in the zone. While Open Window is active, heating is switched off.
      properties:
        detectedTime:
          type: string
          format: date-time
        durationInSeconds:
          type: integer
        expiry:
          type: string
          format: date-time
        remainingTimeInSeconds:
          type: integer

    ZoneOverlay:
      type: object
      description: >
        A zone overlay is a user controlled override for the user defined scheduled (temperature) settings of a zone.
        As long as a zone overlay is present for a zone, the zone's scheduled (temperature) settings do not take effect.

        Termination of the zone overlay (either never, a set time or when the next block in the active timetable starts) 
        is part of the zone overlay definition.
      properties:
        type:
          $ref: '#/components/schemas/ZoneOverlayType'
        setting:
          $ref: '#/components/schemas/ZoneSetting'
        termination:
          $ref: '#/components/schemas/ZoneOverlayTermination'

    ZoneOverlayTermination:
      type: object
      example: MANUAL
      description: Defines if/how the overlay terminates.
      properties:
        type:
          $ref: '#/components/schemas/ZoneOverlayTerminationType'
        durationInSeconds:
          type: integer
          example: 1400
          description: "applicable when termination.type = TIMER"
        remainingTimeInSeconds:
          type: integer
          example: 1400
          description: "applicable when termination.type = TIMER"
        typeSkillBasedApp:
          $ref: '#/components/schemas/ZoneOverlayTerminationTypeSkillBasedApp'
        expiry:
          type: string
          format: date-time
          example: "2024-08-14T23:07:13Z"
          nullable: true
          description: "applicable when termination.type = TIMER"
        projectedExpiry:
          type: string
          format: date-time
          example: "2024-08-14T23:07:13Z"
          nullable: true
          description: "applicable when termination.type = TIMER"

    ZoneOverlayTerminationType:
      type: string
      enum: [ MANUAL, TADO_MODE, TIMER ]
      example: MANUAL
      description: >
        Element of a zone overlay.

        Does not contain NEXT_TIME_BLOCK which is present in the ZoneOverlayTerminationTypeSkillBasedApp enum.

        Value descriptions:

        * MANUAL: the (temperature) settings in the ZoneOverlay will last indefinitely

        * TIMER: the (temperature) settings in the ZoneOverlay will last for a fixed number of seconds, 
        starting at the moment the ZoneOverlay was set (requires setting durationInSeconds as well)

        * TADO_MODE: the (temperature) settings in the ZoneOverlay will last until the next
        time block in the active timetable starts

    ZoneOverlayTerminationTypeSkillBasedApp:
      type: string
      description: >
        When setting a ZoneOverlay this value is used to specify until when the ZoneOverlay should be active.


        Compared to ZoneOverlayTerminationType it contains NEXT_TIME_BLOCK as an extra value.


        Value descriptions:

        * MANUAL: the (temperature) settings in the ZoneOverlay will last indefinitely

        * TIMER: the (temperature) settings in the ZoneOverlay will last for a fixed number of seconds, 
        starting at the moment the ZoneOverlay was set (requires setting durationInSeconds as well)

        * TADO_MODE and NEXT_TIME_BLOCK: the (temperature) settings in the ZoneOverlay will last until the next
        time block in the active timetable starts


        NEXT_TIME_BLOCK could be a deprecated value. The app features which allow a user to set an ZoneOverlay
        (or a DefaultZoneOverlay) only offer options that translate into MANUAL, TIMER or TADO_MODE.
      enum: [ MANUAL, TADO_MODE, TIMER, NEXT_TIME_BLOCK ]
      example: MANUAL

    ZoneOverlayType:
      type: string
      example: MANUAL
      description: Type of a ZoneOverlay. Only known value is MANUAL, but not entirely sure, so no enum

    ZoneSetting:
      type: object
      description: >
        (temperature) settings for a zone which is used in scheduled TimeTableBlocks, 
        in ZoneOverlays (manual override for the scheduled setting),
        and in AwayConfiguration (settings to be used when the home is in AWAY mode).
        
        
        The applicable properties depend on the zone type and the zone capabilities.
      allOf:
        - properties:
            type:
              $ref: '#/components/schemas/ZoneType'
            power:
              $ref: '#/components/schemas/Power'
            temperature:
              $ref: '#/components/schemas/Temperature'
            mode:
              $ref: '#/components/schemas/AirConditioningMode'

    ZoneState:
      type: object
      description: Result of /homes/{homeId}/zone/{zoneId}/state
      properties:
        tadoMode:
          $ref: '#/components/schemas/HomePresence'
        geolocationOverride:
          type: boolean
          example: true
        geolocationOverrideDisableTime:
          #          type: ???
          nullable: true
        preparation:
          #          type: ???
          nullable: true
        setting:
          $ref: '#/components/schemas/ZoneSetting'
        overlayType:
          $ref: '#/components/schemas/ZoneOverlayType'
          nullable: true
        overlay:
          $ref: '#/components/schemas/ZoneOverlay'
        openWindow:
          $ref: '#/components/schemas/ZoneOpenWindow'
        nextScheduleChange:
          type: object
          nullable: true
          properties:
            start:
              type: string
              format: date-time
            setting:
              $ref: '#/components/schemas/ZoneSetting'
        nextTimeBlock:
          type: object
          properties:
            start:
              type: string
              format: date-time
              example: "2024-07-31T20:00:00.000Z"
        link:
          type: object
          properties:
            state:
              type: string
              example: ONLINE
              description: >
                known values: 
                
                * ONLINE
        runningOfflineSchedule:
          type: boolean
          example: false

    ZoneStates:
      type: object
      description: Result of /homes/{homeId}/zoneStates. Basically a map with a zoneID as key and ZoneState as value.
      properties:
        zoneStates:
          description: a dictionary with zone IDs (a.k.a. room IDs) as keys
          additionalProperties:
            $ref: '#/components/schemas/ZoneState'

    ZoneType:
      type: string
      enum: [AIR_CONDITIONING, HEATING, HOT_WATER]
      example: HEATING

tags:
  - name: home
    description: >
      List and configure information about a home (a house or appartment) controlled by tado.
  - name: home control
    description: >
      All operations directly associated with temperature control in a home.
  - name: zone
    description: >
      Retrieve and configure information about a zone (a.k.a. room).
  - name: zone control
    description: >
      All operations directly associated with temperature control in a zone.